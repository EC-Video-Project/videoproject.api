{"version":3,"file":"src/api/users/create.js","mappings":";;;;;;;;;;;;;;;AAAA,cAAc,eAAe,+DAA+D,qFAAqF,kCAAkC,kGAAkG,yBAAyB,gBAAgB,sJAAsJ,UAAU,cAAc,4CAA4C,mBAAmB,aAAa,eAAe,MAAM,cAAc,MAAM,yCAAyC,IAAI,mBAAmB,6DAA6D,iDAAiD,mCAAmC,IAAI,IAAI,SAAS,aAAa,cAAc,eAAe,gBAAgB,6DAA6D,mBAAmB,aAAa,IAAI,sCAAsC,SAAS,oDAAoD,2DAA2D,iEAAe,CAAC,EAAgC;AAC5sC;;;;;;;;;;;;;;;;ACDoD;AAmB7C,MAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,EAAE,EAAkB,EAAE;IACrD,MAAM,OAAO,GAAG,sDAAU,CAAkB,KAAK,CAAC,CAAC;IACnD,MAAM,QAAQ,GAAG;QACf,GAAG,EAAE,OAAO,CAAC,GAAG;QAChB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,SAAS,EAAE,OAAO,CAAC,UAAU;QAC7B,QAAQ,EAAE,OAAO,CAAC,WAAW;QAC7B,UAAU,EAAE,OAAO,CAAC,OAAO;KAC5B,CAAC;IACF,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAIF,+BAA+B;AAC/B,IAAI;AACJ,yCAAyC;AACzC,mDAAmD;AACnD,wBAAwB;AACxB,mCAAmC;AACnC,OAAO;AACP,6BAA6B;AAC7B,8EAA8E;AAC9E,wDAAwD;AACxD,4BAA4B;AAC5B,yGAAyG;AACzG,wCAAwC;AACxC,oBAAoB;AACpB,QAAQ;AACR,2CAA2C;AAC3C,kCAAkC;AAClC,kCAAkC;AAClC,wBAAwB;AACxB,2BAA2B;AAC3B,uCAAuC;AACvC,QAAQ;AACR,OAAO;AACP,uBAAuB;AACvB,6BAA6B;AAC7B,2BAA2B;AAC3B,uBAAuB;AACvB,uBAAuB;AACvB,2BAA2B;AAC3B,mDAAmD;AACnD,mCAAmC;AACnC,IAAI;;;;;;;;;;;;;;;;;;;;;AChEkD;AACK;AACG;AAI9D,6BAAe,oCAAS,OAAwB;IAC9C,OAAO,kDAAK,CAAC,OAAO,CAAC;SAClB,GAAG,CAAC,iEAAiB,EAAE,CAAC;SACxB,GAAG,CAAC,mEAAkB,EAAE,CAAC;AAC9B,CAAC;;;;;;;;;;;ACXD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAa;;AAEb,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,cAAc;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sRAAsR;;AAEtR;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjIa;;AAEb,gDAAgD;AAChD;AACA;AACA;;AAEA,+CAA+C;AAC/C,oBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU,EAAE,mBAAO,CAAC,+CAAa,GAAG;;;AAGpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1Ca;;AAEb;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kFAAkF;;AAElF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH,qNAAqN;;AAErN,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACpFa;;AAEb;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,oBAAO,GAAG,WAAW,kBAAkB;;;AAGnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,2BAA2B;AAC3B;AACA;AACA,gCAAgC;AAChC;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,GAAG,KAAK;AACR;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,kBAAkB,UAAU,OAAO,iBAAiB;;AAEpD;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,iBAAiB,mBAAO,CAAC,kDAAc;;AAEvC;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,kBAAM;;AAElB;;AAEA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;;AAEhC,6CAA6C;;AAE7C,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;UClRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN+B;AACa;AAES;AAErD,kDAAiB,CAAC,EAAE,MAAM,EAAE,WAAW,EAAC,CAAC,CAAC;AAE1C,MAAM,UAAU,GAAG,CAAO,KAA2B,EAAkC,EAAE;IACvF,MAAM,QAAQ,GAAG,mDAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACjE,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IAElD,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC;IAC7C,MAAM,EACJ,GAAG,EACH,YAAY,EACZ,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,OAAO,EACP,eAAe,EACf,QAAQ,EACT,GAAG,UAAU,CAAC;IAEf,sBAAsB;IAEtB,MAAM,MAAM,GAAG;QACb,SAAS,EAAG,OAAO;QACnB,IAAI,EAAE;YACJ,MAAM,EAAE,EAAE;YACV,GAAG;YACH,YAAY;YACZ,KAAK;YACL,SAAS;YACT,QAAQ;YACR,UAAU;YACV,OAAO;YACP,eAAe;YACf,QAAQ;SACT;QACD,YAAY,EAAE,SAAS;KACxB,CAAC;IAEF,IAAI,OAAO,CAAC;IAEZ,MAAM,MAAM,GAAG,IAAI,4DAA2B,EAAE,CAAC;IACjD,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE,IAAI;QACzC,IAAI,GAAG;YAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACrB;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,GAAG,IAAI,CAAC;SAChB;IACH,CAAC,CAAC,CAAC;IACH,QAAQ;IACR,kDAAkD;IAClD,0BAA0B;IAC1B,kBAAkB;IAClB,mBAAmB;IACnB,sBAAsB;IACtB,IAAI;IAEJ,OAAO;QACL,UAAU,EAAE,GAAG;QACf,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;KAC9B;AACH,CAAC;AAEM,MAAM,OAAO,GAAG,kEAAU,CAAC,UAAU,CAAC,CAAC","sources":["webpack:///../../jwt-decode/build/jwt-decode.esm.js","webpack:///../../../src/api/users/helpers/jwts.ts","webpack:///../../../src/middleware/midWrapper.ts","webpack:///external commonjs \"aws-sdk\"","webpack:///external node-commonjs \"https\"","webpack:///external node-commonjs \"util\"","webpack:///../../@middy/core/index.js","webpack:///../../@middy/http-json-body-parser/index.js","webpack:///../../@middy/input-output-logger/index.js","webpack:///../../@middy/util/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../../../src/api/users/create.ts"],"sourcesContent":["function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwt_decode, { JwtPayload } from 'jwt-decode';\n\ntype userInfoPayload = JwtPayload & { \n  email:string,\n  name: string,\n  given_name: string,\n  family_name: string\n  picture: string\n};\n\ntype userInfoObject = {\n  sub: string,\n  email: string,\n  name: string,\n  firstName: string,\n  lastName: string,\n  profilePic: string,\n}\n\nexport const userInfo = (token = ''): userInfoObject => {\n  const decoded = jwt_decode<userInfoPayload>(token);\n  const userInfo = { \n    sub: decoded.sub,\n    email: decoded.email,\n    name: decoded.name,\n    firstName: decoded.given_name, \n    lastName: decoded.family_name, \n    profilePic: decoded.picture \n  };\n  return userInfo;\n};\n\n\n\n// example token (Google login)\n// {\n//   \"at_hash\": \"MwbBDivEenXxUhpZN0335w\",\n//   \"sub\": \"bd22e766-b431-4464-a889-0bdab6f01439\",\n//   \"cognito:groups\": [\n//     \"us-west-2_4BQDdJ7hN_Google\"\n//   ],\n//   \"email_verified\": false,\n//   \"iss\": \"https://cognito-idp.us-west-2.amazonaws.com/us-west-2_4BQDdJ7hN\",\n//   \"cognito:username\": \"google_109844304513055947397\",\n//   \"given_name\": \"Charis\",\n//   \"picture\": \"https://lh3.googleusercontent.com/a/AATXAJzMNtWTVMOnB2-pbOI330YiMdmPhDgKOwpQpDWW=s96-c\",\n//   \"aud\": \"c5vdjbs23cn99ba0g6eeepovg\",\n//   \"identities\": [\n//     {\n//       \"userId\": \"109844304513055947397\",\n//       \"providerName\": \"Google\",\n//       \"providerType\": \"Google\",\n//       \"issuer\": null,\n//       \"primary\": \"true\",\n//       \"dateCreated\": \"1644388231466\"\n//     }\n//   ],\n//   \"token_use\": \"id\",\n//   \"auth_time\": 1647206435,\n//   \"name\": \"Charis Ginn\",\n//   \"exp\": 1647292835,\n//   \"iat\": 1647206435,\n//   \"family_name\": \"Ginn\",\n//   \"jti\": \"a0dec0ea-b272-4de7-9c47-854416c71f27\",\n//   \"email\": \"alignbank@gmail.com\"\n// }","import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport middy, { MiddyfiedHandler } from '@middy/core';\nimport inputOutputLogger from '@middy/input-output-logger';\nimport httpJsonBodyParser from '@middy/http-json-body-parser';\n\ntype handlerFunction = (e: APIGatewayProxyEvent) => Promise<APIGatewayProxyResult>;\n\nexport default function(handler: handlerFunction): MiddyfiedHandler {\n  return middy(handler)\n    .use(inputOutputLogger())\n    .use(httpJsonBodyParser())\n}","module.exports = require(\"aws-sdk\");","module.exports = require(\"https\");","module.exports = require(\"util\");","\"use strict\";\n\nconst middy = (baseHandler = () => {}, plugin) => {\n  var _plugin$beforePrefetc;\n\n  plugin === null || plugin === void 0 ? void 0 : (_plugin$beforePrefetc = plugin.beforePrefetch) === null || _plugin$beforePrefetc === void 0 ? void 0 : _plugin$beforePrefetc.call(plugin);\n  const beforeMiddlewares = [];\n  const afterMiddlewares = [];\n  const onErrorMiddlewares = [];\n\n  const instance = (event = {}, context = {}) => {\n    var _plugin$requestStart;\n\n    plugin === null || plugin === void 0 ? void 0 : (_plugin$requestStart = plugin.requestStart) === null || _plugin$requestStart === void 0 ? void 0 : _plugin$requestStart.call(plugin);\n    const request = {\n      event,\n      context,\n      response: undefined,\n      error: undefined,\n      internal: {}\n    };\n    return runRequest(request, [...beforeMiddlewares], baseHandler, [...afterMiddlewares], [...onErrorMiddlewares], plugin);\n  };\n\n  instance.use = middlewares => {\n    if (Array.isArray(middlewares)) {\n      for (const middleware of middlewares) {\n        instance.applyMiddleware(middleware);\n      }\n\n      return instance;\n    }\n\n    return instance.applyMiddleware(middlewares);\n  };\n\n  instance.applyMiddleware = middleware => {\n    const {\n      before,\n      after,\n      onError\n    } = middleware;\n\n    if (!before && !after && !onError) {\n      throw new Error('Middleware must be an object containing at least one key among \"before\", \"after\", \"onError\"');\n    }\n\n    if (before) instance.before(before);\n    if (after) instance.after(after);\n    if (onError) instance.onError(onError);\n    return instance;\n  }; // Inline Middlewares\n\n\n  instance.before = beforeMiddleware => {\n    beforeMiddlewares.push(beforeMiddleware);\n    return instance;\n  };\n\n  instance.after = afterMiddleware => {\n    afterMiddlewares.unshift(afterMiddleware);\n    return instance;\n  };\n\n  instance.onError = onErrorMiddleware => {\n    onErrorMiddlewares.push(onErrorMiddleware);\n    return instance;\n  };\n\n  instance.__middlewares = {\n    before: beforeMiddlewares,\n    after: afterMiddlewares,\n    onError: onErrorMiddlewares\n  };\n  return instance;\n};\n\nconst runRequest = async (request, beforeMiddlewares, baseHandler, afterMiddlewares, onErrorMiddlewares, plugin) => {\n  try {\n    await runMiddlewares(request, beforeMiddlewares, plugin); // Check if before stack hasn't exit early\n\n    if (request.response === undefined) {\n      var _plugin$beforeHandler, _plugin$afterHandler;\n\n      plugin === null || plugin === void 0 ? void 0 : (_plugin$beforeHandler = plugin.beforeHandler) === null || _plugin$beforeHandler === void 0 ? void 0 : _plugin$beforeHandler.call(plugin);\n      request.response = await baseHandler(request.event, request.context);\n      plugin === null || plugin === void 0 ? void 0 : (_plugin$afterHandler = plugin.afterHandler) === null || _plugin$afterHandler === void 0 ? void 0 : _plugin$afterHandler.call(plugin);\n      await runMiddlewares(request, afterMiddlewares, plugin);\n    }\n  } catch (e) {\n    // Reset response changes made by after stack before error thrown\n    request.response = undefined;\n    request.error = e;\n\n    try {\n      await runMiddlewares(request, onErrorMiddlewares, plugin);\n    } catch (e) {\n      // Save error that wasn't handled\n      e.originalError = request.error;\n      request.error = e;\n      throw request.error;\n    } // Catch if onError stack hasn't handled the error\n\n\n    if (request.response === undefined) throw request.error;\n  } finally {\n    var _plugin$requestEnd;\n\n    await (plugin === null || plugin === void 0 ? void 0 : (_plugin$requestEnd = plugin.requestEnd) === null || _plugin$requestEnd === void 0 ? void 0 : _plugin$requestEnd.call(plugin, request));\n  }\n\n  return request.response;\n};\n\nconst runMiddlewares = async (request, middlewares, plugin) => {\n  for (const nextMiddleware of middlewares) {\n    var _plugin$beforeMiddlew, _plugin$afterMiddlewa;\n\n    plugin === null || plugin === void 0 ? void 0 : (_plugin$beforeMiddlew = plugin.beforeMiddleware) === null || _plugin$beforeMiddlew === void 0 ? void 0 : _plugin$beforeMiddlew.call(plugin, nextMiddleware === null || nextMiddleware === void 0 ? void 0 : nextMiddleware.name);\n    const res = await (nextMiddleware === null || nextMiddleware === void 0 ? void 0 : nextMiddleware(request));\n    plugin === null || plugin === void 0 ? void 0 : (_plugin$afterMiddlewa = plugin.afterMiddleware) === null || _plugin$afterMiddlewa === void 0 ? void 0 : _plugin$afterMiddlewa.call(plugin, nextMiddleware === null || nextMiddleware === void 0 ? void 0 : nextMiddleware.name); // short circuit chaining and respond early\n\n    if (res !== undefined) {\n      request.response = res;\n      return;\n    }\n  }\n};\n\nmodule.exports = middy;\n","\"use strict\";\n\nconst mimePattern = /^application\\/(.+\\+)?json(;.*)?$/;\nconst defaults = {\n  reviver: undefined\n};\n\nconst httpJsonBodyParserMiddleware = (opts = {}) => {\n  const options = { ...defaults,\n    ...opts\n  };\n\n  const httpJsonBodyParserMiddlewareBefore = async request => {\n    var _headers$ContentType;\n\n    const {\n      headers,\n      body\n    } = request.event;\n    const contentTypeHeader = (_headers$ContentType = headers === null || headers === void 0 ? void 0 : headers['Content-Type']) !== null && _headers$ContentType !== void 0 ? _headers$ContentType : headers === null || headers === void 0 ? void 0 : headers['content-type'];\n\n    if (mimePattern.test(contentTypeHeader)) {\n      try {\n        const data = request.event.isBase64Encoded ? Buffer.from(body, 'base64').toString() : body;\n        request.event.rawBody = body;\n        request.event.body = JSON.parse(data, options.reviver);\n      } catch (err) {\n        const {\n          createError\n        } = require('@middy/util'); // UnprocessableEntity\n\n\n        throw createError(422, 'Content type defined as JSON but an invalid JSON was provided');\n      }\n    }\n  };\n\n  return {\n    before: httpJsonBodyParserMiddlewareBefore\n  };\n};\n\nmodule.exports = httpJsonBodyParserMiddleware;\n","\"use strict\";\n\nconst defaults = {\n  logger: data => console.log(JSON.stringify(data, null, 2)),\n  awsContext: false,\n  omitPaths: []\n};\n\nconst inputOutputLoggerMiddleware = (opts = {}) => {\n  let {\n    logger,\n    awsContext,\n    omitPaths\n  } = { ...defaults,\n    ...opts\n  };\n  if (typeof logger !== 'function') logger = null;\n\n  const omitAndLog = (param, request) => {\n    const message = {\n      [param]: request[param]\n    };\n\n    if (awsContext) {\n      message.context = pick(request.context, awsContextKeys);\n    }\n\n    const redactedMessage = omit(JSON.parse(JSON.stringify(message)), omitPaths); // Full clone to prevent nested mutations\n\n    logger(redactedMessage);\n  };\n\n  const inputOutputLoggerMiddlewareBefore = async request => omitAndLog('event', request);\n\n  const inputOutputLoggerMiddlewareAfter = async request => omitAndLog('response', request);\n\n  const inputOutputLoggerMiddlewareOnError = inputOutputLoggerMiddlewareAfter;\n  return {\n    before: logger ? inputOutputLoggerMiddlewareBefore : undefined,\n    after: logger ? inputOutputLoggerMiddlewareAfter : undefined,\n    onError: logger ? inputOutputLoggerMiddlewareOnError : undefined\n  };\n}; // https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html\n\n\nconst awsContextKeys = ['functionName', 'functionVersion', 'invokedFunctionArn', 'memoryLimitInMB', 'awsRequestId', 'logGroupName', 'logStreamName', 'identity', 'clientContext', 'callbackWaitsForEmptyEventLoop']; // move to util, if ever used elsewhere\n\nconst pick = (originalObject = {}, keysToPick = []) => {\n  const newObject = {};\n\n  for (const path of keysToPick) {\n    // only supports first level\n    if (originalObject[path] !== undefined) {\n      newObject[path] = originalObject[path];\n    }\n  }\n\n  return newObject;\n};\n\nconst omit = (originalObject = {}, keysToOmit = []) => {\n  const clonedObject = { ...originalObject\n  };\n\n  for (const path of keysToOmit) {\n    deleteKey(clonedObject, path);\n  }\n\n  return clonedObject;\n};\n\nconst deleteKey = (obj, key) => {\n  if (!Array.isArray(key)) key = key.split('.');\n  const rootKey = key.shift();\n\n  if (key.length && obj[rootKey]) {\n    deleteKey(obj[rootKey], key);\n  } else {\n    delete obj[rootKey];\n  }\n\n  return obj;\n};\n\nmodule.exports = inputOutputLoggerMiddleware;\n","\"use strict\";\n\nconst {\n  Agent\n} = require('https'); // const { NodeHttpHandler } = require('@aws-sdk/node-http-handler') // aws-sdk v3\n\n\nconst awsClientDefaultOptions = {\n  // AWS SDK v3\n  // Docs: https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/enforcing-tls.html\n\n  /* requestHandler: new NodeHttpHandler({\n    httpsAgent: new Agent(\n      {\n        secureProtocol: 'TLSv1_2_method'\n      }\n    )\n  }) */\n  // Docs: https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/enforcing-tls.html\n  httpOptions: {\n    agent: new Agent({\n      secureProtocol: 'TLSv1_2_method'\n    })\n  }\n};\n\nconst createPrefetchClient = options => {\n  const awsClientOptions = { ...awsClientDefaultOptions,\n    ...options.awsClientOptions\n  };\n  const client = new options.AwsClient(awsClientOptions); // AWS XRay\n\n  if (options.awsClientCapture) {\n    return options.awsClientCapture(client);\n  }\n\n  return client;\n};\n\nconst createClient = async (options, request) => {\n  let awsClientCredentials = {}; // Role Credentials\n\n  if (options.awsClientAssumeRole) {\n    if (!request) throw new Error('Request required when assuming role');\n    awsClientCredentials = await getInternal({\n      credentials: options.awsClientAssumeRole\n    }, request);\n  }\n\n  awsClientCredentials = { ...awsClientCredentials,\n    ...options.awsClientOptions\n  };\n  return createPrefetchClient({ ...options,\n    awsClientOptions: awsClientCredentials\n  });\n};\n\nconst canPrefetch = options => {\n  return !(options !== null && options !== void 0 && options.awsClientAssumeRole) && !(options !== null && options !== void 0 && options.disablePrefetch);\n}; // Internal Context\n\n\nconst getInternal = async (variables, request) => {\n  if (!variables || !request) return {};\n  let keys = [];\n  let values = [];\n\n  if (variables === true) {\n    keys = values = Object.keys(request.internal);\n  } else if (typeof variables === 'string') {\n    keys = values = [variables];\n  } else if (Array.isArray(variables)) {\n    keys = values = variables;\n  } else if (typeof variables === 'object') {\n    keys = Object.keys(variables);\n    values = Object.values(variables);\n  }\n\n  const promises = [];\n\n  for (const internalKey of values) {\n    var _valuePromise;\n\n    // 'internal.key.sub_value' -> { [key]: internal.key.sub_value }\n    const pathOptionKey = internalKey.split('.');\n    const rootOptionKey = pathOptionKey.shift();\n    let valuePromise = request.internal[rootOptionKey];\n\n    if (typeof ((_valuePromise = valuePromise) === null || _valuePromise === void 0 ? void 0 : _valuePromise.then) !== 'function') {\n      valuePromise = Promise.resolve(valuePromise);\n    }\n\n    promises.push(valuePromise.then(value => pathOptionKey.reduce((p, c) => p === null || p === void 0 ? void 0 : p[c], value)));\n  } // ensure promise has resolved by the time it's needed\n  // If one of the promises throws it will bubble up to @middy/core\n\n\n  values = await Promise.allSettled(promises);\n  const errors = values.filter(res => res.status === 'rejected').map(res => res.reason.message);\n  if (errors.length) throw new Error(JSON.stringify(errors));\n  return keys.reduce((obj, key, index) => ({ ...obj,\n    [sanitizeKey(key)]: values[index].value\n  }), {});\n};\n\nconst sanitizeKeyPrefixLeadingNumber = /^([0-9])/;\nconst sanitizeKeyRemoveDisallowedChar = /[^a-zA-Z0-9]+/g;\n\nconst sanitizeKey = key => {\n  return key.replace(sanitizeKeyPrefixLeadingNumber, '_$1').replace(sanitizeKeyRemoveDisallowedChar, '_');\n}; // fetch Cache\n\n\nconst cache = {}; // key: { value:{fetchKey:Promise}, expiry }\n\nconst processCache = (options, fetch = () => undefined, request) => {\n  const {\n    cacheExpiry,\n    cacheKey\n  } = options;\n\n  if (cacheExpiry) {\n    const cached = getCache(cacheKey);\n    const unexpired = cached && (cacheExpiry < 0 || cached.expiry > Date.now());\n\n    if (unexpired && cached.modified) {\n      const value = fetch(request, cached.value);\n      cache[cacheKey] = {\n        value: { ...cached.value,\n          ...value\n        },\n        expiry: cached.expiry\n      };\n      return cache[cacheKey];\n    }\n\n    if (unexpired) {\n      return { ...cached,\n        cache: true\n      };\n    }\n  }\n\n  const value = fetch(request);\n  const expiry = Date.now() + cacheExpiry;\n\n  if (cacheExpiry) {\n    cache[cacheKey] = {\n      value,\n      expiry\n    };\n  }\n\n  return {\n    value,\n    expiry\n  };\n};\n\nconst getCache = key => {\n  return cache[key];\n}; // Used to remove parts of a cache\n\n\nconst modifyCache = (cacheKey, value) => {\n  if (!cache[cacheKey]) return;\n  cache[cacheKey] = { ...cache[cacheKey],\n    value,\n    modified: true\n  };\n};\n\nconst clearCache = (keys = null) => {\n  var _keys;\n\n  keys = (_keys = keys) !== null && _keys !== void 0 ? _keys : Object.keys(cache);\n  if (!Array.isArray(keys)) keys = [keys];\n\n  for (const cacheKey of keys) {\n    cache[cacheKey] = undefined;\n  }\n};\n\nconst jsonSafeParse = (string, reviver) => {\n  if (typeof string !== 'string') return string;\n  const firstChar = string[0];\n  if (firstChar !== '{' && firstChar !== '[' && firstChar !== '\"') return string;\n\n  try {\n    return JSON.parse(string, reviver);\n  } catch (e) {}\n\n  return string;\n};\n\nconst normalizeHttpResponse = response => {\n  var _response$headers, _response;\n\n  // May require updating to catch other types\n  if (response === undefined) {\n    response = {};\n  } else if (Array.isArray(response) || typeof response !== 'object' || response === null) {\n    response = {\n      body: response\n    };\n  }\n\n  response.headers = (_response$headers = (_response = response) === null || _response === void 0 ? void 0 : _response.headers) !== null && _response$headers !== void 0 ? _response$headers : {};\n  return response;\n}; // smaller version of `http-errors`\n\n\nconst statuses = require('./codes.json');\n\nconst {\n  inherits\n} = require('util');\n\nconst createErrorRegexp = /[^a-zA-Z]/g;\n\nconst createError = (code, message, properties = {}) => {\n  const name = statuses[code].replace(createErrorRegexp, '');\n  const className = name.substr(-5) !== 'Error' ? name + 'Error' : name;\n\n  function HttpError(message) {\n    // create the error object\n    const msg = message !== null && message !== void 0 ? message : statuses[code];\n    const err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, HttpError); // adjust the [[Prototype]]\n\n    Object.setPrototypeOf(err, HttpError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(HttpError, Error);\n  const desc = Object.getOwnPropertyDescriptor(HttpError, 'name');\n  desc.value = className;\n  Object.defineProperty(HttpError, 'name', desc);\n  Object.assign(HttpError.prototype, {\n    status: code,\n    statusCode: code,\n    expose: code < 500\n  }, properties);\n  return new HttpError(message);\n};\n\nmodule.exports = {\n  createPrefetchClient,\n  createClient,\n  canPrefetch,\n  getInternal,\n  sanitizeKey,\n  processCache,\n  getCache,\n  modifyCache,\n  clearCache,\n  jsonSafeParse,\n  normalizeHttpResponse,\n  createError\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as AWS from 'aws-sdk';\nimport * as JwtHelper from './helpers/jwts';\nimport { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport midWrapper from '../../middleware/midWrapper';\n\nAWS.config.update({ region: 'us-west-2'});\n\nconst rawHandler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n  const userInfo = JwtHelper.userInfo(event.headers.Authorization);\n  const userParams = JSON.parse(event.body || '{}');\n\n  const id = userParams.userId || userInfo.sub;\n  const { \n    bio, \n    employerMode,\n    email,\n    firstName,\n    lastName,\n    profilePic,\n    socials,\n    starredPostings,\n    username\n  } = userParams;\n\n  // validate userParams\n\n  const params = {\n    TableName : 'users',\n    Item: {\n      userId: id,\n      bio,\n      employerMode,\n      email,\n      firstName,\n      lastName,\n      profilePic,\n      socials,\n      starredPostings,\n      username\n    },\n    ReturnValues: 'ALL_NEW'\n  };\n\n  let resBody;\n  \n  const dynamo = new AWS.DynamoDB.DocumentClient();\n  await dynamo.put(params, function(err, data) {\n    if (err) console.log(err);\n    else {\n      console.log(data);\n      resBody = data;\n    }\n  });\n  // try {\n  //   resBody = await dynamo.put(params).promise();\n  //   console.log(resBody);\n  // } catch (err) {\n  //   resBody = err;\n  //   console.log(err);\n  // }\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(resBody)\n  }\n}\n\nexport const handler = midWrapper(rawHandler);"],"names":[],"sourceRoot":""}